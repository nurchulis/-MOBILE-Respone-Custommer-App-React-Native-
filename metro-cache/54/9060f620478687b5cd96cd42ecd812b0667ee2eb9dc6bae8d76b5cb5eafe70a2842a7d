{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"react-native-gesture-handler","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../utils/invariant\"));\n\n  var _reactNativeGestureHandler = _$$_REQUIRE(_dependencyMap[12], \"react-native-gesture-handler\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/nurchulis/Documents/InvateScanQRcode/node_modules/react-navigation-drawer/dist/views/DrawerLayout.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    DrawerLayout: {\n      displayName: \"DrawerLayout\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/nurchulis/Documents/InvateScanQRcode/node_modules/react-navigation-drawer/dist/views/DrawerLayout.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  var DrawerLayout = _wrapComponent(\"DrawerLayout\")((_temp = _class = function (_Component) {\n    (0, _inherits2.default)(DrawerLayout, _Component);\n\n    function DrawerLayout(_props, context) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerLayout).call(this, _props, context));\n\n      _this._updateAnimatedEvent = function (props, state) {\n        var drawerPosition = props.drawerPosition,\n            drawerWidth = props.drawerWidth,\n            drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n            touchXValue = state.touchX,\n            drawerTranslation = state.drawerTranslation,\n            containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n\n        if (drawerPosition !== 'left') {\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        var translationX = dragX;\n\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);\n        }\n\n        _this._openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        _this._onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], {\n          useNativeDriver: props.useNativeAnimations\n        });\n      };\n\n      _this._handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n\n      _this._emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged && _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n\n      _this._openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n\n        if (nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE) {\n          _this._handleRelease(nativeEvent);\n        } else if (nativeEvent.state === _reactNativeGestureHandler.State.ACTIVE) {\n          _this._emitStateChanged(DRAGGING, false);\n\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n\n      _this._onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n\n        if (_this.state.drawerShown && nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n\n      _this._handleRelease = function (nativeEvent) {\n        var _this$props = _this.props,\n            drawerWidth = _this$props.drawerWidth,\n            drawerPosition = _this$props.drawerPosition,\n            drawerType = _this$props.drawerType;\n        var _this$state = _this.state,\n            drawerShown = _this$state.drawerShown,\n            containerWidth = _this$state.containerWidth;\n        var dragX = nativeEvent.translationX,\n            velocityX = nativeEvent.velocityX,\n            touchX = nativeEvent.x;\n\n        if (drawerPosition !== 'left') {\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n\n        if (shouldOpen) {\n          _this._animateDrawer({\n            fromValue: startOffsetX,\n            toValue: drawerWidth,\n            velocity: velocityX\n          });\n        } else {\n          _this._animateDrawer({\n            fromValue: startOffsetX,\n            toValue: 0,\n            velocity: velocityX\n          });\n        }\n      };\n\n      _this._animateDrawer = function (_ref4) {\n        var fromValue = _ref4.fromValue,\n            toValue = _ref4.toValue,\n            velocity = _ref4.velocity;\n\n        _this.state.dragX.setValue(0);\n\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n\n        if (typeof fromValue === 'number') {\n          _this.state.drawerTranslation.setValue(fromValue);\n        }\n\n        var willShow = toValue !== 0;\n\n        _this.setState({\n          drawerShown: willShow\n        });\n\n        _this._emitStateChanged(SETTLING, willShow);\n\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations\n        }).start(function (_ref5) {\n          var finished = _ref5.finished;\n\n          if (finished) {\n            _this._emitStateChanged(IDLE, willShow);\n\n            if (willShow) {\n              _this.props.onDrawerOpen && _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose && _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer({\n          toValue: _this.props.drawerWidth,\n          velocity: options.velocity ? options.velocity : 0\n        });\n      };\n\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer({\n          toValue: 0,\n          velocity: options.velocity ? options.velocity : 0\n        });\n      };\n\n      _this._renderOverlay = function () {\n        (0, _invariant.default)(_this._openValue, 'should be set');\n\n        var overlayOpacity = _this._openValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 0.7],\n          extrapolate: 'clamp'\n        });\n\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return _react.default.createElement(_reactNativeGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this._onTapHandlerStateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: _this.state.drawerShown ? 'auto' : 'none',\n          style: [styles.overlay, dynamicOverlayStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          }\n        }));\n      };\n\n      _this._renderDrawer = function () {\n        var drawerShown = _this.state.drawerShown;\n        var _this$props2 = _this.props,\n            drawerBackgroundColor = _this$props2.drawerBackgroundColor,\n            drawerWidth = _this$props2.drawerWidth,\n            drawerPosition = _this$props2.drawerPosition,\n            drawerType = _this$props2.drawerType,\n            contentContainerStyle = _this$props2.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this._openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n\n        var drawerTranslateX = 0;\n\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          drawerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [closedDrawerOffset, 0],\n            extrapolate: 'clamp'\n          });\n        }\n\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: (_reactNative.I18nManager.isRTL ? !fromLeft : fromLeft) ? 'row' : 'row-reverse'\n        };\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this._handleContainerLayout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          }\n        }, typeof _this.props.children === 'function' ? _this.props.children(_this._openValue) : _this.props.children, _this._renderOverlay()), _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: \"box-none\",\n          accessibilityViewIsModal: drawerShown,\n          style: [styles.drawerContainer, drawerStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: [styles.drawer, dynamicDrawerStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          }\n        }, _this.props.renderNavigationView(_this._openValue))));\n      };\n\n      var _dragX = new _reactNative.Animated.Value(0);\n\n      var _touchX = new _reactNative.Animated.Value(0);\n\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        drawerShown: false,\n        containerWidth: 0\n      };\n\n      _this._updateAnimatedEvent(_props, _this.state);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerLayout, [{\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this._updateAnimatedEvent(props, state);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$state2 = this.state,\n            drawerShown = _this$state2.drawerShown,\n            containerWidth = _this$state2.containerWidth;\n        var _this$props3 = this.props,\n            drawerPosition = _this$props3.drawerPosition,\n            drawerType = _this$props3.drawerType,\n            drawerLockMode = _this$props3.drawerLockMode,\n            edgeWidth = _this$props3.edgeWidth,\n            minSwipeDistance = _this$props3.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          right: drawerShown ? 0 : edgeWidth - containerWidth\n        } : {\n          left: drawerShown ? 0 : edgeWidth - containerWidth\n        };\n        return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler, {\n          hitSlop: hitSlop,\n          minOffsetX: gestureOrientation * minSwipeDistance,\n          maxDeltaY: 15,\n          onGestureEvent: this._onGestureEvent,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          onHandlerStateChange: this._openingHandlerStateChange,\n          ref: this.props.gestureRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          }\n        }, this._renderDrawer());\n      }\n    }]);\n    return DrawerLayout;\n  }(_react.Component), _class.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'black',\n    drawerLockMode: 'unlocked'\n  }, _class.positions = {\n    Left: 'left',\n    Right: 'right'\n  }, _temp));\n\n  var _default2 = DrawerLayout;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    drawer: {\n      flex: 0\n    },\n    drawerContainer: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","map":[[23,0,15,0],[27,0,16,0],[29,0,17,0],[31,0,19,0],[60,0,21,0],[60,6,21,6,"DRAG_TOSS"],[60,15,21,15],[60,18,21,18],[60,22,21,0],[61,0,23,0],[61,6,23,6,"IDLE"],[61,10,23,10],[61,13,23,13],[61,19,23,0],[62,0,24,0],[62,6,24,6,"DRAGGING"],[62,14,24,14],[62,17,24,17],[62,27,24,0],[63,0,25,0],[63,6,25,6,"SETTLING"],[63,14,25,14],[63,17,25,17],[63,27,25,0],[68,0,45,2],[68,26,45,14,"props"],[68,32,45,2],[68,34,45,21,"context"],[68,41,45,2],[68,43,45,30],[69,0,45,30],[71,0,45,30],[72,0,46,4],[72,116,46,10,"props"],[72,122,46,4],[72,124,46,17,"context"],[72,131,46,4],[74,0,45,30],[74,12,69,2,"_updateAnimatedEvent"],[74,32,45,30],[74,35,69,25],[74,45,69,26,"props"],[74,50,69,25],[74,52,69,33,"state"],[74,57,69,25],[74,59,69,43],[75,0,69,43],[75,12,71,12,"drawerPosition"],[75,26,69,43],[75,29,71,56,"props"],[75,34,69,43],[75,35,71,12,"drawerPosition"],[75,49,69,43],[76,0,69,43],[76,12,71,28,"drawerWidth"],[76,23,69,43],[76,26,71,56,"props"],[76,31,69,43],[76,32,71,28,"drawerWidth"],[76,43,69,43],[77,0,69,43],[77,12,71,41,"drawerType"],[77,22,69,43],[77,25,71,56,"props"],[77,30,69,43],[77,31,71,41,"drawerType"],[77,41,69,43],[78,0,69,43],[78,12,73,13,"dragXValue"],[78,22,69,43],[78,25,77,8,"state"],[78,30,69,43],[78,31,73,6,"dragX"],[78,36,69,43],[79,0,69,43],[79,12,74,14,"touchXValue"],[79,23,69,43],[79,26,77,8,"state"],[79,31,69,43],[79,32,74,6,"touchX"],[79,38,69,43],[80,0,69,43],[80,12,75,6,"drawerTranslation"],[80,29,69,43],[80,32,77,8,"state"],[80,37,69,43],[80,38,75,6,"drawerTranslation"],[80,55,69,43],[81,0,69,43],[81,12,76,6,"containerWidth"],[81,26,69,43],[81,29,77,8,"state"],[81,34,69,43],[81,35,76,6,"containerWidth"],[81,49,69,43],[82,0,79,4],[82,12,79,8,"dragX"],[82,17,79,13],[82,20,79,16,"dragXValue"],[82,30,79,4],[83,0,80,4],[83,12,80,8,"touchX"],[83,18,80,14],[83,21,80,17,"touchXValue"],[83,32,80,4],[85,0,82,4],[85,12,82,8,"drawerPosition"],[85,26,82,22],[85,31,82,27],[85,37,82,4],[85,39,82,35],[86,0,90,6,"dragX"],[86,10,90,6,"dragX"],[86,15,90,11],[86,18,90,14,"Animated"],[86,40,90,23,"multiply"],[86,48,90,14],[86,49,90,32],[86,53,90,36,"Animated"],[86,75,90,45,"Value"],[86,80,90,32],[86,81,90,51],[86,82,90,52],[86,83,90,32],[86,84,90,14],[86,86,90,56,"dragXValue"],[86,96,90,14],[86,97,90,6],[87,0,91,6,"touchX"],[87,10,91,6,"touchX"],[87,16,91,12],[87,19,91,15,"Animated"],[87,41,91,24,"add"],[87,44,91,15],[87,45,91,28],[87,49,91,32,"Animated"],[87,71,91,41,"Value"],[87,76,91,28],[87,77,91,47,"containerWidth"],[87,91,91,28],[87,92,91,15],[87,94,91,64,"Animated"],[87,116,91,73,"multiply"],[87,124,91,64],[87,125,91,82],[87,129,91,86,"Animated"],[87,151,91,95,"Value"],[87,156,91,82],[87,157,91,101],[87,158,91,102],[87,159,91,82],[87,160,91,64],[87,162,91,106,"touchXValue"],[87,173,91,64],[87,174,91,15],[87,175,91,6],[88,0,92,6,"touchXValue"],[88,10,92,6,"touchXValue"],[88,21,92,17],[88,22,92,18,"setValue"],[88,30,92,6],[88,31,92,27,"containerWidth"],[88,45,92,6],[89,0,93,5],[89,9,82,4],[89,15,93,11],[90,0,94,6,"touchXValue"],[90,10,94,6,"touchXValue"],[90,21,94,17],[90,22,94,18,"setValue"],[90,30,94,6],[90,31,94,27],[90,32,94,6],[91,0,95,5],[93,0,121,4],[93,12,121,8,"translationX"],[93,24,121,20],[93,27,121,23,"dragX"],[93,32,121,4],[95,0,122,4],[95,12,122,8,"drawerType"],[95,22,122,18],[95,27,122,23],[95,34,122,4],[95,36,122,32],[96,0,123,6],[96,14,123,12,"startPositionX"],[96,28,123,26],[96,31,123,29,"Animated"],[96,53,123,38,"add"],[96,56,123,29],[96,57,123,42,"touchX"],[96,63,123,29],[96,65,123,50,"Animated"],[96,87,123,59,"multiply"],[96,95,123,50],[96,96,123,68],[96,100,123,72,"Animated"],[96,122,123,81,"Value"],[96,127,123,68],[96,128,123,87],[96,129,123,88],[96,130,123,68],[96,131,123,50],[96,133,123,92,"dragX"],[96,138,123,50],[96,139,123,29],[96,140,123,6],[98,0,125,6],[98,14,125,12,"dragOffsetFromOnStartPosition"],[98,43,125,41],[98,46,125,44,"startPositionX"],[98,60,125,58],[98,61,125,59,"interpolate"],[98,72,125,44],[98,73,125,71],[99,0,126,8,"inputRange"],[99,12,126,8,"inputRange"],[99,22,126,18],[99,24,126,20],[99,25,126,21,"drawerWidth"],[99,36,126,32],[99,39,126,35],[99,40,126,20],[99,42,126,38,"drawerWidth"],[99,53,126,20],[99,55,126,51,"drawerWidth"],[99,66,126,62],[99,69,126,65],[99,70,126,20],[99,71,125,71],[100,0,127,8,"outputRange"],[100,12,127,8,"outputRange"],[100,23,127,19],[100,25,127,21],[100,26,127,22],[100,27,127,21],[100,29,127,25],[100,30,127,21],[100,32,127,28],[100,33,127,21],[101,0,125,71],[101,11,125,44],[101,12,125,6],[102,0,129,6,"translationX"],[102,10,129,6,"translationX"],[102,22,129,18],[102,25,129,21,"Animated"],[102,47,129,30,"add"],[102,50,129,21],[102,51,129,34,"dragX"],[102,56,129,21],[102,58,129,41,"dragOffsetFromOnStartPosition"],[102,87,129,21],[102,88,129,6],[103,0,130,5],[105,0,132,4],[105,14,132,9,"_openValue"],[105,24,132,4],[105,27,132,22,"Animated"],[105,49,132,31,"add"],[105,52,132,22],[105,53,132,35,"translationX"],[105,65,132,22],[105,67,132,49,"drawerTranslation"],[105,84,132,22],[105,86,132,68,"interpolate"],[105,97,132,22],[105,98,132,80],[106,0,133,6,"inputRange"],[106,10,133,6,"inputRange"],[106,20,133,16],[106,22,133,18],[106,23,133,19],[106,24,133,18],[106,26,133,22,"drawerWidth"],[106,37,133,18],[106,38,132,80],[107,0,134,6,"outputRange"],[107,10,134,6,"outputRange"],[107,21,134,17],[107,23,134,19],[107,24,134,20],[107,25,134,19],[107,27,134,23],[107,28,134,19],[107,29,132,80],[108,0,135,6,"extrapolate"],[108,10,135,6,"extrapolate"],[108,21,135,17],[108,23,135,19],[109,0,132,80],[109,9,132,22],[109,10,132,4],[110,0,138,4],[110,14,138,9,"_onGestureEvent"],[110,29,138,4],[110,32,138,27,"Animated"],[110,54,138,36,"event"],[110,59,138,27],[110,60,138,42],[110,61,138,43],[111,0,138,45,"nativeEvent"],[111,10,138,45,"nativeEvent"],[111,21,138,56],[111,23,138,58],[112,0,138,60,"translationX"],[112,12,138,60,"translationX"],[112,24,138,72],[112,26,138,74,"dragXValue"],[112,36,138,58],[113,0,138,86,"x"],[113,12,138,86,"x"],[113,13,138,87],[113,15,138,89,"touchXValue"],[114,0,138,58],[115,0,138,43],[115,9,138,42],[115,10,138,27],[115,12,138,107],[116,0,138,109,"useNativeDriver"],[116,10,138,109,"useNativeDriver"],[116,25,138,124],[116,27,138,126,"props"],[116,32,138,131],[116,33,138,132,"useNativeAnimations"],[117,0,138,107],[117,9,138,27],[117,10,138,4],[118,0,139,3],[118,7,45,30],[120,0,45,30],[120,12,141,2,"_handleContainerLayout"],[120,34,45,30],[120,37,141,27],[120,53,141,48],[121,0,141,48],[121,12,141,30,"nativeEvent"],[121,23,141,48],[121,31,141,30,"nativeEvent"],[121,42,141,48],[123,0,142,4],[123,14,142,9,"setState"],[123,22,142,4],[123,23,142,18],[124,0,142,20,"containerWidth"],[124,10,142,20,"containerWidth"],[124,24,142,34],[124,26,142,36,"nativeEvent"],[124,37,142,47],[124,38,142,48,"layout"],[124,44,142,36],[124,45,142,55,"width"],[125,0,142,18],[125,9,142,4],[126,0,143,3],[126,7,45,30],[128,0,45,30],[128,12,145,2,"_emitStateChanged"],[128,29,45,30],[128,32,145,22],[128,42,145,23,"newState"],[128,50,145,22],[128,52,145,33,"drawerWillShow"],[128,66,145,22],[128,68,145,52],[129,0,146,4],[129,14,146,9,"props"],[129,19,146,4],[129,20,146,15,"onDrawerStateChanged"],[129,40,146,4],[129,44,146,39],[129,50,146,44,"props"],[129,55,146,39],[129,56,146,50,"onDrawerStateChanged"],[129,76,146,39],[129,77,146,71,"newState"],[129,85,146,39],[129,87,146,81,"drawerWillShow"],[129,101,146,39],[129,102,146,4],[130,0,147,3],[130,7,45,30],[132,0,45,30],[132,12,149,2,"_openingHandlerStateChange"],[132,38,45,30],[132,41,149,31],[132,58,149,52],[133,0,149,52],[133,12,149,34,"nativeEvent"],[133,23,149,52],[133,32,149,34,"nativeEvent"],[133,43,149,52],[135,0,150,4],[135,12,150,8,"nativeEvent"],[135,23,150,19],[135,24,150,20,"oldState"],[135,32,150,8],[135,37,150,33,"State"],[135,70,150,39,"ACTIVE"],[135,76,150,4],[135,78,150,47],[136,0,151,6],[136,16,151,11,"_handleRelease"],[136,30,151,6],[136,31,151,26,"nativeEvent"],[136,42,151,6],[137,0,152,5],[137,9,150,4],[137,15,152,11],[137,19,152,15,"nativeEvent"],[137,30,152,26],[137,31,152,27,"state"],[137,36,152,15],[137,41,152,37,"State"],[137,74,152,43,"ACTIVE"],[137,80,152,11],[137,82,152,51],[138,0,153,6],[138,16,153,11,"_emitStateChanged"],[138,33,153,6],[138,34,153,29,"DRAGGING"],[138,42,153,6],[138,44,153,39],[138,49,153,6],[140,0,154,6],[140,14,154,10],[140,20,154,15,"props"],[140,25,154,10],[140,26,154,21,"keyboardDismissMode"],[140,45,154,10],[140,50,154,45],[140,59,154,6],[140,61,154,56],[141,0,155,8,"Keyboard"],[141,34,155,17,"dismiss"],[141,41,155,8],[142,0,156,7],[144,0,157,6],[144,14,157,10],[144,20,157,15,"props"],[144,25,157,10],[144,26,157,21,"hideStatusBar"],[144,39,157,6],[144,41,157,36],[145,0,158,8,"StatusBar"],[145,35,158,18,"setHidden"],[145,44,158,8],[145,45,158,28],[145,49,158,8],[145,51,158,34],[145,57,158,39,"props"],[145,62,158,34],[145,63,158,45,"statusBarAnimation"],[145,81,158,34],[145,85,158,67],[145,92,158,8],[146,0,159,7],[147,0,160,5],[148,0,161,3],[148,7,45,30],[150,0,45,30],[150,12,163,2,"_onTapHandlerStateChange"],[150,36,45,30],[150,39,163,29],[150,56,163,50],[151,0,163,50],[151,12,163,32,"nativeEvent"],[151,23,163,50],[151,32,163,32,"nativeEvent"],[151,43,163,50],[153,0,164,4],[153,12,164,8],[153,18,164,13,"state"],[153,23,164,8],[153,24,164,19,"drawerShown"],[153,35,164,8],[153,39,164,34,"nativeEvent"],[153,50,164,45],[153,51,164,46,"oldState"],[153,59,164,34],[153,64,164,59,"State"],[153,97,164,65,"ACTIVE"],[153,103,164,8],[153,107,164,75],[153,113,164,80,"props"],[153,118,164,75],[153,119,164,86,"drawerLockMode"],[153,133,164,75],[153,138,164,105],[153,151,164,4],[153,153,164,120],[154,0,165,6],[154,16,165,11,"closeDrawer"],[154,27,165,6],[155,0,166,5],[156,0,167,3],[156,7,45,30],[158,0,45,30],[158,12,169,2,"_handleRelease"],[158,26,45,30],[158,29,169,19],[158,39,169,19,"nativeEvent"],[158,50,169,30],[158,52,169,34],[159,0,169,34],[159,26,170,56],[159,32,170,61,"props"],[159,37,169,34],[160,0,169,34],[160,12,170,12,"drawerWidth"],[160,23,169,34],[160,38,170,12,"drawerWidth"],[160,49,169,34],[161,0,169,34],[161,12,170,25,"drawerPosition"],[161,26,169,34],[161,41,170,25,"drawerPosition"],[161,55,169,34],[162,0,169,34],[162,12,170,41,"drawerType"],[162,22,169,34],[162,37,170,41,"drawerType"],[162,47,169,34],[163,0,169,34],[163,26,171,44],[163,32,171,49,"state"],[163,37,169,34],[164,0,169,34],[164,12,171,12,"drawerShown"],[164,23,169,34],[164,38,171,12,"drawerShown"],[164,49,169,34],[165,0,169,34],[165,12,171,25,"containerWidth"],[165,26,169,34],[165,41,171,25,"containerWidth"],[165,55,169,34],[166,0,169,34],[166,12,172,24,"dragX"],[166,17,169,34],[166,20,172,56,"nativeEvent"],[166,31,169,34],[166,32,172,10,"translationX"],[166,44,169,34],[167,0,169,34],[167,12,172,31,"velocityX"],[167,21,169,34],[167,24,172,56,"nativeEvent"],[167,35,169,34],[167,36,172,31,"velocityX"],[167,45,169,34],[168,0,169,34],[168,12,172,45,"touchX"],[168,18,169,34],[168,21,172,56,"nativeEvent"],[168,32,169,34],[168,33,172,42,"x"],[168,34,169,34],[170,0,174,4],[170,12,174,8,"drawerPosition"],[170,26,174,22],[170,31,174,27],[170,37,174,4],[170,39,174,35],[171,0,177,6,"dragX"],[171,10,177,6,"dragX"],[171,15,177,11],[171,18,177,14],[171,19,177,15,"dragX"],[171,24,177,6],[172,0,178,6,"touchX"],[172,10,178,6,"touchX"],[172,16,178,12],[172,19,178,15,"containerWidth"],[172,33,178,29],[172,36,178,32,"touchX"],[172,42,178,6],[173,0,179,6,"velocityX"],[173,10,179,6,"velocityX"],[173,19,179,15],[173,22,179,18],[173,23,179,19,"velocityX"],[173,32,179,6],[174,0,180,5],[176,0,182,4],[176,12,182,10,"gestureStartX"],[176,25,182,23],[176,28,182,26,"touchX"],[176,34,182,32],[176,37,182,35,"dragX"],[176,42,182,4],[177,0,183,4],[177,12,183,8,"dragOffsetBasedOnStart"],[177,34,183,30],[177,37,183,33],[177,38,183,4],[179,0,185,4],[179,12,185,8,"drawerType"],[179,22,185,18],[179,27,185,23],[179,34,185,4],[179,36,185,32],[180,0,186,6,"dragOffsetBasedOnStart"],[180,10,186,6,"dragOffsetBasedOnStart"],[180,32,186,28],[180,35,186,31,"gestureStartX"],[180,48,186,44],[180,51,186,47,"drawerWidth"],[180,62,186,31],[180,65,186,61,"gestureStartX"],[180,78,186,74],[180,81,186,77,"drawerWidth"],[180,92,186,31],[180,95,186,91],[180,96,186,6],[181,0,187,5],[183,0,189,4],[183,12,189,10,"startOffsetX"],[183,24,189,22],[183,27,189,25,"dragX"],[183,32,189,30],[183,35,189,33,"dragOffsetBasedOnStart"],[183,57,189,25],[183,61,189,59,"drawerShown"],[183,72,189,70],[183,75,189,73,"drawerWidth"],[183,86,189,70],[183,89,189,87],[183,90,189,25],[183,91,189,4],[184,0,190,4],[184,12,190,10,"projOffsetX"],[184,23,190,21],[184,26,190,24,"startOffsetX"],[184,38,190,36],[184,41,190,39,"DRAG_TOSS"],[184,50,190,48],[184,53,190,51,"velocityX"],[184,62,190,4],[185,0,192,4],[185,12,192,10,"shouldOpen"],[185,22,192,20],[185,25,192,23,"projOffsetX"],[185,36,192,34],[185,39,192,37,"drawerWidth"],[185,50,192,48],[185,53,192,51],[185,54,192,4],[187,0,194,4],[187,12,194,8,"shouldOpen"],[187,22,194,4],[187,24,194,20],[188,0,195,6],[188,16,195,11,"_animateDrawer"],[188,30,195,6],[188,31,195,26],[189,0,196,8,"fromValue"],[189,12,196,8,"fromValue"],[189,21,196,17],[189,23,196,19,"startOffsetX"],[189,35,195,26],[190,0,197,8,"toValue"],[190,12,197,8,"toValue"],[190,19,197,15],[190,21,197,17,"drawerWidth"],[190,32,195,26],[191,0,198,8,"velocity"],[191,12,198,8,"velocity"],[191,20,198,16],[191,22,198,18,"velocityX"],[192,0,195,26],[192,11,195,6],[193,0,200,5],[193,9,194,4],[193,15,200,11],[194,0,201,6],[194,16,201,11,"_animateDrawer"],[194,30,201,6],[194,31,201,26],[195,0,202,8,"fromValue"],[195,12,202,8,"fromValue"],[195,21,202,17],[195,23,202,19,"startOffsetX"],[195,35,201,26],[196,0,203,8,"toValue"],[196,12,203,8,"toValue"],[196,19,203,15],[196,21,203,17],[196,22,201,26],[197,0,204,8,"velocity"],[197,12,204,8,"velocity"],[197,20,204,16],[197,22,204,18,"velocityX"],[198,0,201,26],[198,11,201,6],[199,0,206,5],[200,0,207,3],[200,7,45,30],[202,0,45,30],[202,12,209,2,"_animateDrawer"],[202,26,45,30],[202,29,209,19],[202,46,213,8],[203,0,213,8],[203,12,210,4,"fromValue"],[203,21,213,8],[203,30,210,4,"fromValue"],[203,39,213,8],[204,0,213,8],[204,12,211,4,"toValue"],[204,19,213,8],[204,28,211,4,"toValue"],[204,35,213,8],[205,0,213,8],[205,12,212,4,"velocity"],[205,20,213,8],[205,29,212,4,"velocity"],[205,37,213,8],[207,0,214,4],[207,14,214,9,"state"],[207,19,214,4],[207,20,214,15,"dragX"],[207,25,214,4],[207,26,214,21,"setValue"],[207,34,214,4],[207,35,214,30],[207,36,214,4],[209,0,215,4],[209,14,215,9,"state"],[209,19,215,4],[209,20,215,15,"touchX"],[209,26,215,4],[209,27,215,22,"setValue"],[209,35,215,4],[209,36,215,31],[209,42,215,36,"props"],[209,47,215,31],[209,48,215,42,"drawerPosition"],[209,62,215,31],[209,67,215,61],[209,73,215,31],[209,76,215,70],[209,77,215,31],[209,80,215,74],[209,86,215,79,"state"],[209,91,215,74],[209,92,215,85,"containerWidth"],[209,106,215,4],[211,0,217,4],[211,12,217,8],[211,19,217,15,"fromValue"],[211,28,217,8],[211,33,217,29],[211,41,217,4],[211,43,217,39],[212,0,218,6],[212,16,218,11,"state"],[212,21,218,6],[212,22,218,17,"drawerTranslation"],[212,39,218,6],[212,40,218,35,"setValue"],[212,48,218,6],[212,49,218,44,"fromValue"],[212,58,218,6],[213,0,219,5],[215,0,221,4],[215,12,221,10,"willShow"],[215,20,221,18],[215,23,221,21,"toValue"],[215,30,221,28],[215,35,221,33],[215,36,221,4],[217,0,222,4],[217,14,222,9,"setState"],[217,22,222,4],[217,23,222,18],[218,0,222,20,"drawerShown"],[218,10,222,20,"drawerShown"],[218,21,222,31],[218,23,222,33,"willShow"],[219,0,222,18],[219,9,222,4],[221,0,223,4],[221,14,223,9,"_emitStateChanged"],[221,31,223,4],[221,32,223,27,"SETTLING"],[221,40,223,4],[221,42,223,37,"willShow"],[221,50,223,4],[223,0,224,4],[223,12,224,8],[223,18,224,13,"props"],[223,23,224,8],[223,24,224,19,"hideStatusBar"],[223,37,224,4],[223,39,224,34],[224,0,225,6,"StatusBar"],[224,33,225,16,"setHidden"],[224,42,225,6],[224,43,225,26,"willShow"],[224,51,225,6],[224,53,225,36],[224,59,225,41,"props"],[224,64,225,36],[224,65,225,47,"statusBarAnimation"],[224,83,225,36],[224,87,225,69],[224,94,225,6],[225,0,226,5],[227,0,227,4,"Animated"],[227,30,227,13,"spring"],[227,36,227,4],[227,37,227,20],[227,43,227,25,"state"],[227,48,227,20],[227,49,227,31,"drawerTranslation"],[227,66,227,4],[227,68,227,50],[228,0,228,6,"velocity"],[228,10,228,6,"velocity"],[228,18,228,14],[228,20,228,6,"velocity"],[228,28,227,50],[229,0,229,6,"bounciness"],[229,10,229,6,"bounciness"],[229,20,229,16],[229,22,229,18],[229,23,227,50],[230,0,230,6,"toValue"],[230,10,230,6,"toValue"],[230,17,230,13],[230,19,230,6,"toValue"],[230,26,227,50],[231,0,231,6,"useNativeDriver"],[231,10,231,6,"useNativeDriver"],[231,25,231,21],[231,27,231,23],[231,33,231,28,"props"],[231,38,231,23],[231,39,231,34,"useNativeAnimations"],[232,0,227,50],[232,9,227,4],[232,11,232,7,"start"],[232,16,227,4],[232,17,232,13],[232,34,232,31],[233,0,232,31],[233,14,232,16,"finished"],[233,22,232,31],[233,31,232,16,"finished"],[233,39,232,31],[235,0,233,6],[235,14,233,10,"finished"],[235,22,233,6],[235,24,233,20],[236,0,234,8],[236,18,234,13,"_emitStateChanged"],[236,35,234,8],[236,36,234,31,"IDLE"],[236,40,234,8],[236,42,234,37,"willShow"],[236,50,234,8],[238,0,235,8],[238,16,235,12,"willShow"],[238,24,235,8],[238,26,235,22],[239,0,236,10],[239,20,236,15,"props"],[239,25,236,10],[239,26,236,21,"onDrawerOpen"],[239,38,236,10],[239,42,236,37],[239,48,236,42,"props"],[239,53,236,37],[239,54,236,48,"onDrawerOpen"],[239,66,236,37],[239,68,236,10],[240,0,237,9],[240,13,235,8],[240,19,237,15],[241,0,238,10],[241,20,238,15,"props"],[241,25,238,10],[241,26,238,21,"onDrawerClose"],[241,39,238,10],[241,43,238,38],[241,49,238,43,"props"],[241,54,238,38],[241,55,238,49,"onDrawerClose"],[241,68,238,38],[241,70,238,10],[242,0,239,9],[243,0,240,7],[244,0,241,5],[244,9,227,4],[245,0,242,3],[245,7,45,30],[247,0,45,30],[247,12,244,2,"openDrawer"],[247,22,45,30],[247,25,244,15],[247,37,244,33],[248,0,244,33],[248,12,244,16,"options"],[248,19,244,33],[248,90,244,26],[248,92,244,33],[250,0,245,4],[250,14,245,9,"_animateDrawer"],[250,28,245,4],[250,29,245,24],[251,0,246,6,"toValue"],[251,10,246,6,"toValue"],[251,17,246,13],[251,19,246,15],[251,25,246,20,"props"],[251,30,246,15],[251,31,246,26,"drawerWidth"],[251,42,245,24],[252,0,247,6,"velocity"],[252,10,247,6,"velocity"],[252,18,247,14],[252,20,247,16,"options"],[252,27,247,23],[252,28,247,24,"velocity"],[252,36,247,16],[252,39,247,35,"options"],[252,46,247,42],[252,47,247,43,"velocity"],[252,55,247,16],[252,58,247,54],[253,0,245,24],[253,9,245,4],[254,0,249,3],[254,7,45,30],[256,0,45,30],[256,12,251,2,"closeDrawer"],[256,23,45,30],[256,26,251,16],[256,38,251,34],[257,0,251,34],[257,12,251,17,"options"],[257,19,251,34],[257,90,251,27],[257,92,251,34],[259,0,252,4],[259,14,252,9,"_animateDrawer"],[259,28,252,4],[259,29,252,24],[260,0,253,6,"toValue"],[260,10,253,6,"toValue"],[260,17,253,13],[260,19,253,15],[260,20,252,24],[261,0,254,6,"velocity"],[261,10,254,6,"velocity"],[261,18,254,14],[261,20,254,16,"options"],[261,27,254,23],[261,28,254,24,"velocity"],[261,36,254,16],[261,39,254,35,"options"],[261,46,254,42],[261,47,254,43,"velocity"],[261,55,254,16],[261,58,254,54],[262,0,252,24],[262,9,252,4],[263,0,256,3],[263,7,45,30],[265,0,45,30],[265,12,258,2,"_renderOverlay"],[265,26,45,30],[265,29,258,19],[265,41,258,25],[266,0,260,4],[266,32,260,14],[266,38,260,19,"_openValue"],[266,48,260,4],[266,50,260,31],[266,65,260,4],[268,0,261,4],[268,12,261,10,"overlayOpacity"],[268,26,261,24],[268,29,261,27],[268,35,261,32,"_openValue"],[268,45,261,27],[268,46,261,43,"interpolate"],[268,57,261,27],[268,58,261,55],[269,0,262,6,"inputRange"],[269,10,262,6,"inputRange"],[269,20,262,16],[269,22,262,18],[269,23,262,19],[269,24,262,18],[269,26,262,22],[269,27,262,18],[269,28,261,55],[270,0,263,6,"outputRange"],[270,10,263,6,"outputRange"],[270,21,263,17],[270,23,263,19],[270,24,263,20],[270,25,263,19],[270,27,263,23],[270,30,263,19],[270,31,261,55],[271,0,264,6,"extrapolate"],[271,10,264,6,"extrapolate"],[271,21,264,17],[271,23,264,19],[272,0,261,55],[272,9,261,27],[272,10,261,4],[274,0,266,4],[274,12,266,10,"dynamicOverlayStyles"],[274,32,266,30],[274,35,266,33],[275,0,267,6,"opacity"],[275,10,267,6,"opacity"],[275,17,267,13],[275,19,267,15,"overlayOpacity"],[275,33,266,33],[276,0,268,6,"backgroundColor"],[276,10,268,6,"backgroundColor"],[276,25,268,21],[276,27,268,23],[276,33,268,28,"props"],[276,38,268,23],[276,39,268,34,"overlayColor"],[277,0,266,33],[277,9,266,4],[278,0,270,4],[278,15,270,11],[278,44,270,12],[278,88,270,11],[279,0,270,30],[279,10,270,30],[279,30,270,50],[279,32,270,52],[279,38,270,57,"_onTapHandlerStateChange"],[279,62,270,11],[280,0,270,11],[281,0,270,11],[282,0,270,11],[283,0,270,11],[284,0,270,11],[284,11,271,8],[284,40,271,9],[284,61,271,8],[284,62,271,18],[284,66,271,8],[285,0,271,23],[285,10,271,23],[285,23,271,36],[285,25,271,38],[285,31,271,43,"state"],[285,36,271,38],[285,37,271,49,"drawerShown"],[285,48,271,38],[285,51,271,63],[285,57,271,38],[285,60,271,72],[285,66,271,8],[286,0,271,80],[286,10,271,80],[286,15,271,85],[286,17,271,87],[286,18,271,88,"styles"],[286,24,271,94],[286,25,271,95,"overlay"],[286,32,271,87],[286,34,271,104,"dynamicOverlayStyles"],[286,54,271,87],[286,55,271,8],[287,0,271,8],[288,0,271,8],[289,0,271,8],[290,0,271,8],[291,0,271,8],[291,10,270,11],[291,11,270,4],[292,0,273,3],[292,7,45,30],[294,0,45,30],[294,12,275,2,"_renderDrawer"],[294,25,45,30],[294,28,275,18],[294,40,275,24],[295,0,275,24],[295,12,276,12,"drawerShown"],[295,23,275,24],[295,26,276,28],[295,32,276,33,"state"],[295,37,275,24],[295,38,276,12,"drawerShown"],[295,49,275,24],[296,0,275,24],[296,27,283,8],[296,33,283,13,"props"],[296,38,275,24],[297,0,275,24],[297,12,278,6,"drawerBackgroundColor"],[297,33,275,24],[297,49,278,6,"drawerBackgroundColor"],[297,70,275,24],[298,0,275,24],[298,12,279,6,"drawerWidth"],[298,23,275,24],[298,39,279,6,"drawerWidth"],[298,50,275,24],[299,0,275,24],[299,12,280,6,"drawerPosition"],[299,26,275,24],[299,42,280,6,"drawerPosition"],[299,56,275,24],[300,0,275,24],[300,12,281,6,"drawerType"],[300,22,275,24],[300,38,281,6,"drawerType"],[300,48,275,24],[301,0,275,24],[301,12,282,6,"contentContainerStyle"],[301,33,275,24],[301,49,282,6,"contentContainerStyle"],[301,70,275,24],[302,0,285,4],[302,12,285,10,"fromLeft"],[302,20,285,18],[302,23,285,21,"drawerPosition"],[302,37,285,35],[302,42,285,40],[302,48,285,4],[303,0,286,4],[303,12,286,10,"drawerSlide"],[303,23,286,21],[303,26,286,24,"drawerType"],[303,36,286,34],[303,41,286,39],[303,47,286,4],[304,0,287,4],[304,12,287,10,"containerSlide"],[304,26,287,24],[304,29,287,27,"drawerType"],[304,39,287,37],[304,44,287,42],[304,51,287,4],[305,0,289,4],[305,12,289,10,"dynamicDrawerStyles"],[305,31,289,29],[305,34,289,32],[306,0,290,6,"backgroundColor"],[306,10,290,6,"backgroundColor"],[306,25,290,21],[306,27,290,23,"drawerBackgroundColor"],[306,48,289,32],[307,0,291,6,"width"],[307,10,291,6,"width"],[307,15,291,11],[307,17,291,13,"drawerWidth"],[308,0,289,32],[308,9,289,4],[309,0,293,4],[309,12,293,10,"openValue"],[309,21,293,19],[309,24,293,22],[309,30,293,27,"_openValue"],[309,40,293,4],[310,0,294,4],[310,32,294,14,"openValue"],[310,41,294,4],[310,43,294,25],[310,58,294,4],[311,0,296,4],[311,12,296,8,"containerStyles"],[311,27,296,4],[313,0,297,4],[313,12,297,8,"containerSlide"],[313,26,297,4],[313,28,297,24],[314,0,298,6],[314,14,298,12,"containerTranslateX"],[314,33,298,31],[314,36,298,34,"openValue"],[314,45,298,43],[314,46,298,44,"interpolate"],[314,57,298,34],[314,58,298,56],[315,0,299,8,"inputRange"],[315,12,299,8,"inputRange"],[315,22,299,18],[315,24,299,20],[315,25,299,21],[315,26,299,20],[315,28,299,24],[315,29,299,20],[315,30,298,56],[316,0,300,8,"outputRange"],[316,12,300,8,"outputRange"],[316,23,300,19],[316,25,300,21,"fromLeft"],[316,33,300,29],[316,36,300,32],[316,37,300,33],[316,38,300,32],[316,40,300,36,"drawerWidth"],[316,51,300,32],[316,52,300,29],[316,55,300,51],[316,56,300,52],[316,57,300,51],[316,59,300,55],[316,60,300,56,"drawerWidth"],[316,71,300,51],[316,72,298,56],[317,0,301,8,"extrapolate"],[317,12,301,8,"extrapolate"],[317,23,301,19],[317,25,301,21],[318,0,298,56],[318,11,298,34],[318,12,298,6],[319,0,303,6,"containerStyles"],[319,10,303,6,"containerStyles"],[319,25,303,21],[319,28,303,24],[320,0,304,8,"transform"],[320,12,304,8,"transform"],[320,21,304,17],[320,23,304,19],[320,24,304,20],[321,0,304,22,"translateX"],[321,14,304,22,"translateX"],[321,24,304,32],[321,26,304,34,"containerTranslateX"],[322,0,304,20],[322,13,304,19],[323,0,303,24],[323,11,303,6],[324,0,306,5],[326,0,308,4],[326,12,308,8,"drawerTranslateX"],[326,28,308,24],[326,31,308,27],[326,32,308,4],[328,0,309,4],[328,12,309,8,"drawerSlide"],[328,23,309,4],[328,25,309,21],[329,0,310,6],[329,14,310,12,"closedDrawerOffset"],[329,32,310,30],[329,35,310,33,"fromLeft"],[329,43,310,41],[329,46,310,44],[329,47,310,45,"drawerWidth"],[329,58,310,41],[329,61,310,59,"drawerWidth"],[329,72,310,6],[330,0,311,6,"drawerTranslateX"],[330,10,311,6,"drawerTranslateX"],[330,26,311,22],[330,29,311,25,"openValue"],[330,38,311,34],[330,39,311,35,"interpolate"],[330,50,311,25],[330,51,311,47],[331,0,312,8,"inputRange"],[331,12,312,8,"inputRange"],[331,22,312,18],[331,24,312,20],[331,25,312,21],[331,26,312,20],[331,28,312,24],[331,29,312,20],[331,30,311,47],[332,0,313,8,"outputRange"],[332,12,313,8,"outputRange"],[332,23,313,19],[332,25,313,21],[332,26,313,22,"closedDrawerOffset"],[332,44,313,21],[332,46,313,42],[332,47,313,21],[332,48,311,47],[333,0,314,8,"extrapolate"],[333,12,314,8,"extrapolate"],[333,23,314,19],[333,25,314,21],[334,0,311,47],[334,11,311,25],[334,12,311,6],[335,0,316,5],[337,0,317,4],[337,12,317,10,"drawerStyles"],[337,24,317,22],[337,27,317,25],[338,0,318,6,"transform"],[338,10,318,6,"transform"],[338,19,318,15],[338,21,318,17],[338,22,318,18],[339,0,318,20,"translateX"],[339,12,318,20,"translateX"],[339,22,318,30],[339,24,318,32,"drawerTranslateX"],[340,0,318,18],[340,11,318,17],[340,12,317,25],[341,0,319,6,"flexDirection"],[341,10,319,6,"flexDirection"],[341,23,319,19],[341,25,319,21],[341,26,319,22,"I18nManager"],[341,51,319,34,"isRTL"],[341,56,319,22],[341,59,319,42],[341,60,319,43,"fromLeft"],[341,68,319,22],[341,71,319,54,"fromLeft"],[341,79,319,21],[341,83,319,66],[341,88,319,21],[341,91,319,74],[342,0,317,25],[342,9,317,4],[343,0,322,4],[343,15,322,11],[343,44,322,12],[343,65,322,11],[343,66,322,21],[343,70,322,11],[344,0,322,26],[344,10,322,26],[344,15,322,31],[344,17,322,33,"styles"],[344,23,322,39],[344,24,322,40,"main"],[344,28,322,11],[345,0,322,46],[345,10,322,46],[345,18,322,54],[345,20,322,56],[345,26,322,61,"_handleContainerLayout"],[345,48,322,11],[346,0,322,11],[347,0,322,11],[348,0,322,11],[349,0,322,11],[350,0,322,11],[350,11,323,8],[350,40,323,9],[350,61,323,8],[350,62,323,18],[350,66,323,8],[351,0,323,23],[351,10,323,23],[351,15,323,28],[351,17,323,30],[351,18,323,31,"drawerType"],[351,28,323,41],[351,33,323,46],[351,40,323,31],[351,43,323,56,"styles"],[351,49,323,62],[351,50,323,63,"containerOnBack"],[351,65,323,31],[351,68,323,81,"styles"],[351,74,323,87],[351,75,323,88,"containerInFront"],[351,91,323,30],[351,93,323,106,"containerStyles"],[351,108,323,30],[351,110,323,123,"contentContainerStyle"],[351,131,323,30],[351,132,323,8],[352,0,323,8],[353,0,323,8],[354,0,323,8],[355,0,323,8],[356,0,323,8],[356,11,324,11],[356,18,324,18],[356,24,324,23,"props"],[356,29,324,18],[356,30,324,29,"children"],[356,38,324,11],[356,43,324,42],[356,53,324,11],[356,56,324,55],[356,62,324,60,"props"],[356,67,324,55],[356,68,324,66,"children"],[356,76,324,55],[356,77,324,75],[356,83,324,80,"_openValue"],[356,93,324,55],[356,94,324,11],[356,97,324,94],[356,103,324,99,"props"],[356,108,324,94],[356,109,324,105,"children"],[356,117,323,8],[356,119,325,11],[356,125,325,16,"_renderOverlay"],[356,139,325,11],[356,141,323,8],[356,142,322,11],[356,144,327,8],[356,173,327,9],[356,194,327,8],[356,195,327,18],[356,199,327,8],[357,0,327,23],[357,10,327,23],[357,23,327,36],[357,25,327,37],[357,35,327,8],[358,0,327,48],[358,10,327,48],[358,34,327,72],[358,36,327,74,"drawerShown"],[358,47,327,8],[359,0,327,87],[359,10,327,87],[359,15,327,92],[359,17,327,94],[359,18,327,95,"styles"],[359,24,327,101],[359,25,327,102,"drawerContainer"],[359,40,327,94],[359,42,327,119,"drawerStyles"],[359,54,327,94],[359,55,327,8],[360,0,327,8],[361,0,327,8],[362,0,327,8],[363,0,327,8],[364,0,327,8],[364,11,328,10],[364,40,328,11],[364,57,328,10],[365,0,328,16],[365,10,328,16],[365,15,328,21],[365,17,328,23],[365,18,328,24,"styles"],[365,24,328,30],[365,25,328,31,"drawer"],[365,31,328,23],[365,33,328,39,"dynamicDrawerStyles"],[365,52,328,23],[365,53,328,10],[366,0,328,10],[367,0,328,10],[368,0,328,10],[369,0,328,10],[370,0,328,10],[370,11,329,13],[370,17,329,18,"props"],[370,22,329,13],[370,23,329,24,"renderNavigationView"],[370,43,329,13],[370,44,329,45],[370,50,329,50,"_openValue"],[370,60,329,13],[370,61,328,10],[370,62,327,8],[370,63,322,11],[370,64,322,4],[371,0,333,3],[371,7,45,30],[373,0,48,4],[373,10,48,10,"dragX"],[373,16,48,15],[373,19,48,18],[373,23,48,22,"Animated"],[373,45,48,31,"Value"],[373,50,48,18],[373,51,48,37],[373,52,48,18],[373,53,48,4],[375,0,49,4],[375,10,49,10,"touchX"],[375,17,49,16],[375,20,49,19],[375,24,49,23,"Animated"],[375,46,49,32,"Value"],[375,51,49,19],[375,52,49,38],[375,53,49,19],[375,54,49,4],[377,0,50,4],[377,10,50,10,"drawerTranslation"],[377,28,50,27],[377,31,50,30],[377,35,50,34,"Animated"],[377,57,50,43,"Value"],[377,62,50,30],[377,63,50,49],[377,64,50,30],[377,65,50,4],[379,0,52,4],[379,12,52,9,"state"],[379,17,52,4],[379,20,52,17],[380,0,53,6,"dragX"],[380,8,53,6,"dragX"],[380,13,53,11],[380,15,53,6,"dragX"],[380,21,52,17],[381,0,54,6,"touchX"],[381,8,54,6,"touchX"],[381,14,54,12],[381,16,54,6,"touchX"],[381,23,52,17],[382,0,55,6,"drawerTranslation"],[382,8,55,6,"drawerTranslation"],[382,25,55,23],[382,27,55,6,"drawerTranslation"],[382,45,52,17],[383,0,56,6,"drawerShown"],[383,8,56,6,"drawerShown"],[383,19,56,17],[383,21,56,19],[383,26,52,17],[384,0,57,6,"containerWidth"],[384,8,57,6,"containerWidth"],[384,22,57,20],[384,24,57,22],[385,0,52,17],[385,7,52,4],[387,0,60,4],[387,12,60,9,"_updateAnimatedEvent"],[387,32,60,4],[387,33,60,30,"props"],[387,39,60,4],[387,41,60,37],[387,47,60,42,"state"],[387,52,60,4],[389,0,45,30],[390,0,61,3],[394,42,63,22,"props"],[394,47],[394,49,63,29,"state"],[394,54],[394,56,63,36],[395,0,64,4],[395,12,64,8],[395,17,64,13,"props"],[395,22,64,8],[395,23,64,19,"drawerPosition"],[395,37,64,8],[395,42,64,38,"props"],[395,47,64,43],[395,48,64,44,"drawerPosition"],[395,62,64,8],[395,66,64,62],[395,71,64,67,"props"],[395,76,64,62],[395,77,64,73,"drawerWidth"],[395,88,64,62],[395,93,64,89,"props"],[395,98,64,94],[395,99,64,95,"drawerWidth"],[395,110,64,8],[395,114,64,110],[395,119,64,115,"props"],[395,124,64,110],[395,125,64,121,"drawerType"],[395,135,64,110],[395,140,64,136,"props"],[395,145,64,141],[395,146,64,142,"drawerType"],[395,156,64,8],[395,160,64,156],[395,165,64,161,"state"],[395,170,64,156],[395,171,64,167,"containerWidth"],[395,185,64,156],[395,190,64,186,"state"],[395,195,64,191],[395,196,64,192,"containerWidth"],[395,210,64,4],[395,212,64,208],[396,0,65,6],[396,15,65,11,"_updateAnimatedEvent"],[396,35,65,6],[396,36,65,32,"props"],[396,41,65,6],[396,43,65,39,"state"],[396,48,65,6],[397,0,66,5],[398,0,67,3],[401,31,335,11],[402,0,335,11],[402,27,336,44],[402,32,336,49,"state"],[402,37,335,11],[403,0,335,11],[403,12,336,12,"drawerShown"],[403,23,335,11],[403,39,336,12,"drawerShown"],[403,50,335,11],[404,0,335,11],[404,12,336,25,"containerWidth"],[404,26,335,11],[404,42,336,25,"containerWidth"],[404,56,335,11],[405,0,335,11],[405,27,344,8],[405,32,344,13,"props"],[405,37,335,11],[406,0,335,11],[406,12,339,6,"drawerPosition"],[406,26,335,11],[406,42,339,6,"drawerPosition"],[406,56,335,11],[407,0,335,11],[407,12,340,6,"drawerType"],[407,22,335,11],[407,38,340,6,"drawerType"],[407,48,335,11],[408,0,335,11],[408,12,341,6,"drawerLockMode"],[408,26,335,11],[408,42,341,6,"drawerLockMode"],[408,56,335,11],[409,0,335,11],[409,12,342,6,"edgeWidth"],[409,21,335,11],[409,37,342,6,"edgeWidth"],[409,46,335,11],[410,0,335,11],[410,12,343,6,"minSwipeDistance"],[410,28,335,11],[410,44,343,6,"minSwipeDistance"],[410,60,335,11],[411,0,346,4],[411,12,346,10,"fromLeft"],[411,20,346,18],[411,23,346,21,"drawerPosition"],[411,37,346,35],[411,42,346,40],[411,48,346,4],[412,0,351,4],[412,12,351,10,"gestureOrientation"],[412,30,351,28],[412,33,351,31],[412,34,351,32,"fromLeft"],[412,42,351,40],[412,45,351,43],[412,46,351,40],[412,49,351,47],[412,50,351,48],[412,51,351,31],[412,56,351,54,"drawerShown"],[412,67,351,65],[412,70,351,68],[412,71,351,69],[412,72,351,65],[412,75,351,73],[412,76,351,31],[412,77,351,4],[413,0,356,4],[413,12,356,10,"hitSlop"],[413,19,356,17],[413,22,356,20,"fromLeft"],[413,30,356,28],[413,33,356,31],[414,0,356,33,"right"],[414,10,356,33,"right"],[414,15,356,38],[414,17,356,40,"drawerShown"],[414,28,356,51],[414,31,356,54],[414,32,356,51],[414,35,356,58,"edgeWidth"],[414,44,356,67],[414,47,356,70,"containerWidth"],[415,0,356,31],[415,9,356,28],[415,12,356,89],[416,0,356,91,"left"],[416,10,356,91,"left"],[416,14,356,95],[416,16,356,97,"drawerShown"],[416,27,356,108],[416,30,356,111],[416,31,356,108],[416,34,356,115,"edgeWidth"],[416,43,356,124],[416,46,356,127,"containerWidth"],[417,0,356,89],[417,9,356,4],[418,0,358,4],[418,15,358,11],[418,44,358,12],[418,88,358,11],[419,0,358,30],[419,10,358,30],[419,17,358,37],[419,19,358,39,"hitSlop"],[419,26,358,11],[420,0,358,48],[420,10,358,48],[420,20,358,58],[420,22,358,60,"gestureOrientation"],[420,40,358,78],[420,43,358,81,"minSwipeDistance"],[420,59,358,11],[421,0,358,99],[421,10,358,99],[421,19,358,108],[421,21,358,110],[421,23,358,11],[422,0,358,114],[422,10,358,114],[422,24,358,128],[422,26,358,130],[422,31,358,135,"_onGestureEvent"],[422,46,358,11],[423,0,358,152],[423,10,358,152],[423,17,358,159],[423,19,358,161,"drawerLockMode"],[423,33,358,175],[423,38,358,180],[423,53,358,161],[423,57,358,199,"drawerLockMode"],[423,71,358,213],[423,76,358,218],[423,89,358,11],[424,0,358,233],[424,10,358,233],[424,30,358,253],[424,32,358,255],[424,37,358,260,"_openingHandlerStateChange"],[424,63,358,11],[425,0,358,288],[425,10,358,288],[425,13,358,291],[425,15,358,293],[425,20,358,298,"props"],[425,25,358,293],[425,26,358,304,"gestureRef"],[425,36,358,11],[426,0,358,11],[427,0,358,11],[428,0,358,11],[429,0,358,11],[430,0,358,11],[430,11,359,9],[430,16,359,14,"_renderDrawer"],[430,29,359,9],[430,31,358,11],[430,32,358,4],[431,0,361,3],[434,4,27,42,"Component"],[434,20],[434,30,28,9,"defaultProps"],[434,42],[434,45,28,24],[435,0,29,4,"drawerWidth"],[435,4,29,4,"drawerWidth"],[435,15,29,15],[435,17,29,17],[435,20,28,24],[436,0,30,4,"drawerPosition"],[436,4,30,4,"drawerPosition"],[436,18,30,18],[436,20,30,20],[436,26,28,24],[437,0,31,4,"useNativeAnimations"],[437,4,31,4,"useNativeAnimations"],[437,23,31,23],[437,25,31,25],[437,29,28,24],[438,0,32,4,"drawerType"],[438,4,32,4,"drawerType"],[438,14,32,14],[438,16,32,16],[438,23,28,24],[439,0,33,4,"edgeWidth"],[439,4,33,4,"edgeWidth"],[439,13,33,13],[439,15,33,15],[439,17,28,24],[440,0,34,4,"minSwipeDistance"],[440,4,34,4,"minSwipeDistance"],[440,20,34,20],[440,22,34,22],[440,23,28,24],[441,0,35,4,"overlayColor"],[441,4,35,4,"overlayColor"],[441,16,35,16],[441,18,35,18],[441,25,28,24],[442,0,36,4,"drawerLockMode"],[442,4,36,4,"drawerLockMode"],[442,18,36,18],[442,20,36,20],[443,0,28,24],[443,3],[443,12,39,9,"positions"],[443,21],[443,24,39,21],[444,0,40,4,"Left"],[444,4,40,4,"Left"],[444,8,40,8],[444,10,40,10],[444,16,39,21],[445,0,41,4,"Right"],[445,4,41,4,"Right"],[445,9,41,9],[445,11,41,11],[446,0,39,21],[446,3],[451,0,364,0],[451,6,364,6,"styles"],[451,12,364,12],[451,15,364,15,"StyleSheet"],[451,39,364,26,"create"],[451,45,364,15],[451,46,364,33],[452,0,365,2,"drawer"],[452,4,365,2,"drawer"],[452,10,365,8],[452,12,365,10],[453,0,365,12,"flex"],[453,6,365,12,"flex"],[453,10,365,16],[453,12,365,18],[454,0,365,10],[454,5,364,33],[455,0,366,2,"drawerContainer"],[455,4,366,2,"drawerContainer"],[455,19,366,17],[455,39,367,7,"StyleSheet"],[455,63,367,18,"absoluteFillObject"],[455,81,366,17],[456,0,368,4,"zIndex"],[456,6,368,4,"zIndex"],[456,12,368,10],[456,14,368,12],[456,18,366,17],[457,0,369,4,"flexDirection"],[457,6,369,4,"flexDirection"],[457,19,369,17],[457,21,369,19],[458,0,366,17],[458,6,364,33],[459,0,371,2,"containerInFront"],[459,4,371,2,"containerInFront"],[459,20,371,18],[459,40,372,7,"StyleSheet"],[459,64,372,18,"absoluteFillObject"],[459,82,371,18],[460,0,373,4,"zIndex"],[460,6,373,4,"zIndex"],[460,12,373,10],[460,14,373,12],[461,0,371,18],[461,6,364,33],[462,0,375,2,"containerOnBack"],[462,4,375,2,"containerOnBack"],[462,19,375,17],[462,39,376,7,"StyleSheet"],[462,63,376,18,"absoluteFillObject"],[462,81,375,17],[462,82,364,33],[463,0,378,2,"main"],[463,4,378,2,"main"],[463,8,378,6],[463,10,378,8],[464,0,379,4,"flex"],[464,6,379,4,"flex"],[464,10,379,8],[464,12,379,10],[464,13,378,8],[465,0,380,4,"zIndex"],[465,6,380,4,"zIndex"],[465,12,380,10],[465,14,380,12],[465,15,378,8],[466,0,381,4,"overflow"],[466,6,381,4,"overflow"],[466,14,381,12],[466,16,381,14],[467,0,378,8],[467,5,364,33],[468,0,383,2,"overlay"],[468,4,383,2,"overlay"],[468,11,383,9],[468,31,384,7,"StyleSheet"],[468,55,384,18,"absoluteFillObject"],[468,73,383,9],[469,0,385,4,"zIndex"],[469,6,385,4,"zIndex"],[469,12,385,10],[469,14,385,12],[470,0,383,9],[471,0,364,33],[471,3,364,15],[471,4,364,0]]},"type":"js/module"}]}