{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"../utils/shallowEqual","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ScenesReducer;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../utils/invariant\"));\n\n  var _shallowEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../utils/shallowEqual\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var SCENE_KEY_PREFIX = 'scene_';\n\n  function compareKey(one, two) {\n    var delta = one.length - two.length;\n\n    if (delta > 0) {\n      return 1;\n    }\n\n    if (delta < 0) {\n      return -1;\n    }\n\n    return one > two ? 1 : -1;\n  }\n\n  function compareScenes(one, two) {\n    if (one.index > two.index) {\n      return 1;\n    }\n\n    if (one.index < two.index) {\n      return -1;\n    }\n\n    return compareKey(one.key, two.key);\n  }\n\n  function areScenesShallowEqual(one, two) {\n    return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);\n  }\n\n  function areRoutesShallowEqual(one, two) {\n    if (!one || !two) {\n      return one === two;\n    }\n\n    if (one.key !== two.key) {\n      return false;\n    }\n\n    return (0, _shallowEqual.default)(one, two);\n  }\n\n  function ScenesReducer(scenes, nextState, prevState, descriptors) {\n    scenes.forEach(function (scene) {\n      var route = scene.route;\n\n      if (descriptors && descriptors[route.key]) {\n        scene.descriptor = descriptors[route.key];\n      }\n    });\n\n    if (prevState === nextState) {\n      return scenes;\n    }\n\n    var prevScenes = new Map();\n    var freshScenes = new Map();\n    var staleScenes = new Map();\n    scenes.forEach(function (scene) {\n      var key = scene.key;\n\n      if (scene.isStale) {\n        staleScenes.set(key, scene);\n      }\n\n      prevScenes.set(key, scene);\n    });\n    var nextKeys = new Set();\n    var nextRoutes = nextState.routes;\n\n    if (nextRoutes.length > nextState.index + 1) {\n      console.warn('StackRouter provided invalid state, index should always be the top route');\n      nextRoutes = nextState.routes.slice(0, nextState.index + 1);\n    }\n\n    nextRoutes.forEach(function (route, index) {\n      var key = SCENE_KEY_PREFIX + route.key;\n      var descriptor = descriptors && descriptors[route.key];\n      var scene = {\n        index: index,\n        isActive: false,\n        isStale: false,\n        key: key,\n        route: route,\n        descriptor: descriptor\n      };\n      (0, _invariant.default)(!nextKeys.has(key), \"navigation.state.routes[\" + index + \"].key \\\"\" + key + \"\\\" conflicts with \" + 'another route!');\n      nextKeys.add(key);\n\n      if (staleScenes.has(key)) {\n        staleScenes.delete(key);\n      }\n\n      freshScenes.set(key, scene);\n    });\n\n    if (prevState) {\n      var prevRoutes = prevState.routes;\n\n      if (prevRoutes.length > prevState.index + 1) {\n        console.warn('StackRouter provided invalid state, index should always be the top route');\n        prevRoutes = prevRoutes.slice(0, prevState.index + 1);\n      }\n\n      prevRoutes.forEach(function (route, index) {\n        var key = SCENE_KEY_PREFIX + route.key;\n\n        if (freshScenes.has(key)) {\n          return;\n        }\n\n        var lastScene = scenes.find(function (scene) {\n          return scene.route.key === route.key;\n        });\n        var descriptor = lastScene ? lastScene.descriptor : descriptors[route.key];\n\n        if (descriptor) {\n          staleScenes.set(key, {\n            index: index,\n            isActive: false,\n            isStale: true,\n            key: key,\n            route: route,\n            descriptor: descriptor\n          });\n        }\n      });\n    }\n\n    var nextScenes = [];\n\n    var mergeScene = function mergeScene(nextScene) {\n      var key = nextScene.key;\n      var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;\n\n      if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {\n        nextScenes.push(prevScene);\n      } else {\n        nextScenes.push(nextScene);\n      }\n    };\n\n    staleScenes.forEach(mergeScene);\n    freshScenes.forEach(mergeScene);\n    nextScenes.sort(compareScenes);\n    var activeScenesCount = 0;\n    nextScenes.forEach(function (scene, ii) {\n      var isActive = !scene.isStale && scene.index === nextState.index;\n\n      if (isActive !== scene.isActive) {\n        nextScenes[ii] = _objectSpread({}, scene, {\n          isActive: isActive\n        });\n      }\n\n      if (isActive) {\n        activeScenesCount++;\n      }\n    });\n    (0, _invariant.default)(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);\n\n    if (nextScenes.length !== scenes.length) {\n      return nextScenes;\n    }\n\n    if (nextScenes.some(function (scene, index) {\n      return !areScenesShallowEqual(scenes[index], scene);\n    })) {\n      return nextScenes;\n    }\n\n    return scenes;\n  }\n});","map":[[11,0,1,0],[13,0,2,0],[19,0,4,0],[19,6,4,6,"SCENE_KEY_PREFIX"],[19,22,4,22],[19,25,4,25],[19,33,4,0],[21,0,9,0],[21,11,9,9,"compareKey"],[21,21,9,0],[21,22,9,20,"one"],[21,25,9,0],[21,27,9,25,"two"],[21,30,9,0],[21,32,9,30],[22,0,10,2],[22,8,10,8,"delta"],[22,13,10,13],[22,16,10,16,"one"],[22,19,10,19],[22,20,10,20,"length"],[22,26,10,16],[22,29,10,29,"two"],[22,32,10,32],[22,33,10,33,"length"],[22,39,10,2],[24,0,11,2],[24,8,11,6,"delta"],[24,13,11,11],[24,16,11,14],[24,17,11,2],[24,19,11,17],[25,0,12,4],[25,13,12,11],[25,14,12,4],[26,0,13,3],[28,0,14,2],[28,8,14,6,"delta"],[28,13,14,11],[28,16,14,14],[28,17,14,2],[28,19,14,17],[29,0,15,4],[29,13,15,11],[29,14,15,12],[29,15,15,4],[30,0,16,3],[32,0,17,2],[32,11,17,9,"one"],[32,14,17,12],[32,17,17,15,"two"],[32,20,17,9],[32,23,17,21],[32,24,17,9],[32,27,17,25],[32,28,17,26],[32,29,17,2],[33,0,18,1],[35,0,23,0],[35,11,23,9,"compareScenes"],[35,24,23,0],[35,25,23,23,"one"],[35,28,23,0],[35,30,23,28,"two"],[35,33,23,0],[35,35,23,33],[36,0,24,2],[36,8,24,6,"one"],[36,11,24,9],[36,12,24,10,"index"],[36,17,24,6],[36,20,24,18,"two"],[36,23,24,21],[36,24,24,22,"index"],[36,29,24,2],[36,31,24,29],[37,0,25,4],[37,13,25,11],[37,14,25,4],[38,0,26,3],[40,0,27,2],[40,8,27,6,"one"],[40,11,27,9],[40,12,27,10,"index"],[40,17,27,6],[40,20,27,18,"two"],[40,23,27,21],[40,24,27,22,"index"],[40,29,27,2],[40,31,27,29],[41,0,28,4],[41,13,28,11],[41,14,28,12],[41,15,28,4],[42,0,29,3],[44,0,31,2],[44,11,31,9,"compareKey"],[44,21,31,19],[44,22,31,20,"one"],[44,25,31,23],[44,26,31,24,"key"],[44,29,31,19],[44,31,31,29,"two"],[44,34,31,32],[44,35,31,33,"key"],[44,38,31,19],[44,39,31,2],[45,0,32,1],[47,0,37,0],[47,11,37,9,"areScenesShallowEqual"],[47,32,37,0],[47,33,37,31,"one"],[47,36,37,0],[47,38,37,36,"two"],[47,41,37,0],[47,43,37,41],[48,0,38,2],[48,11,39,4,"one"],[48,14,39,7],[48,15,39,8,"key"],[48,18,39,4],[48,23,39,16,"two"],[48,26,39,19],[48,27,39,20,"key"],[48,30,39,4],[48,34,40,4,"one"],[48,37,40,7],[48,38,40,8,"index"],[48,43,40,4],[48,48,40,18,"two"],[48,51,40,21],[48,52,40,22,"index"],[48,57,39,4],[48,61,41,4,"one"],[48,64,41,7],[48,65,41,8,"isStale"],[48,72,41,4],[48,77,41,20,"two"],[48,80,41,23],[48,81,41,24,"isStale"],[48,88,39,4],[48,92,42,4,"one"],[48,95,42,7],[48,96,42,8,"isActive"],[48,104,42,4],[48,109,42,21,"two"],[48,112,42,24],[48,113,42,25,"isActive"],[48,121,39,4],[48,125,43,4,"areRoutesShallowEqual"],[48,146,43,25],[48,147,43,26,"one"],[48,150,43,29],[48,151,43,30,"route"],[48,156,43,25],[48,158,43,37,"two"],[48,161,43,40],[48,162,43,41,"route"],[48,167,43,25],[48,168,38,2],[49,0,45,1],[51,0,50,0],[51,11,50,9,"areRoutesShallowEqual"],[51,32,50,0],[51,33,50,31,"one"],[51,36,50,0],[51,38,50,36,"two"],[51,41,50,0],[51,43,50,41],[52,0,51,2],[52,8,51,6],[52,9,51,7,"one"],[52,12,51,6],[52,16,51,14],[52,17,51,15,"two"],[52,20,51,2],[52,22,51,20],[53,0,52,4],[53,13,52,11,"one"],[53,16,52,14],[53,21,52,19,"two"],[53,24,52,4],[54,0,53,3],[56,0,55,2],[56,8,55,6,"one"],[56,11,55,9],[56,12,55,10,"key"],[56,15,55,6],[56,20,55,18,"two"],[56,23,55,21],[56,24,55,22,"key"],[56,27,55,2],[56,29,55,27],[57,0,56,4],[57,13,56,11],[57,18,56,4],[58,0,57,3],[60,0,59,2],[60,11,59,9],[60,38,59,22,"one"],[60,41,59,9],[60,43,59,27,"two"],[60,46,59,9],[60,47,59,2],[61,0,60,1],[63,0,62,15],[63,11,62,24,"ScenesReducer"],[63,24,62,15],[63,25,63,2,"scenes"],[63,31,62,15],[63,33,64,2,"nextState"],[63,42,62,15],[63,44,65,2,"prevState"],[63,53,62,15],[63,55,66,2,"descriptors"],[63,66,62,15],[63,68,67,2],[64,0,71,2,"scenes"],[64,4,71,2,"scenes"],[64,10,71,8],[64,11,71,9,"forEach"],[64,18,71,2],[64,19,71,17],[64,29,71,17,"scene"],[64,34,71,22],[64,36,71,26],[65,0,71,26],[65,10,72,12,"route"],[65,15,71,26],[65,18,72,22,"scene"],[65,23,71,26],[65,24,72,12,"route"],[65,29,71,26],[67,0,73,4],[67,10,73,8,"descriptors"],[67,21,73,19],[67,25,73,23,"descriptors"],[67,36,73,34],[67,37,73,35,"route"],[67,42,73,40],[67,43,73,41,"key"],[67,46,73,34],[67,47,73,4],[67,49,73,47],[68,0,74,6,"scene"],[68,8,74,6,"scene"],[68,13,74,11],[68,14,74,12,"descriptor"],[68,24,74,6],[68,27,74,25,"descriptors"],[68,38,74,36],[68,39,74,37,"route"],[68,44,74,42],[68,45,74,43,"key"],[68,48,74,36],[68,49,74,6],[69,0,75,5],[70,0,76,3],[70,5,71,2],[72,0,79,2],[72,8,79,6,"prevState"],[72,17,79,15],[72,22,79,20,"nextState"],[72,31,79,2],[72,33,79,31],[73,0,80,4],[73,13,80,11,"scenes"],[73,19,80,4],[74,0,81,3],[76,0,83,2],[76,8,83,8,"prevScenes"],[76,18,83,18],[76,21,83,21],[76,25,83,25,"Map"],[76,28,83,21],[76,30,83,2],[77,0,84,2],[77,8,84,8,"freshScenes"],[77,19,84,19],[77,22,84,22],[77,26,84,26,"Map"],[77,29,84,22],[77,31,84,2],[78,0,85,2],[78,8,85,8,"staleScenes"],[78,19,85,19],[78,22,85,22],[78,26,85,26,"Map"],[78,29,85,22],[78,31,85,2],[79,0,88,2,"scenes"],[79,4,88,2,"scenes"],[79,10,88,8],[79,11,88,9,"forEach"],[79,18,88,2],[79,19,88,17],[79,29,88,17,"scene"],[79,34,88,22],[79,36,88,26],[80,0,88,26],[80,10,89,12,"key"],[80,13,88,26],[80,16,89,20,"scene"],[80,21,88,26],[80,22,89,12,"key"],[80,25,88,26],[82,0,90,4],[82,10,90,8,"scene"],[82,15,90,13],[82,16,90,14,"isStale"],[82,23,90,4],[82,25,90,23],[83,0,91,6,"staleScenes"],[83,8,91,6,"staleScenes"],[83,19,91,17],[83,20,91,18,"set"],[83,23,91,6],[83,24,91,22,"key"],[83,27,91,6],[83,29,91,27,"scene"],[83,34,91,6],[84,0,92,5],[86,0,93,4,"prevScenes"],[86,6,93,4,"prevScenes"],[86,16,93,14],[86,17,93,15,"set"],[86,20,93,4],[86,21,93,19,"key"],[86,24,93,4],[86,26,93,24,"scene"],[86,31,93,4],[87,0,94,3],[87,5,88,2],[88,0,96,2],[88,8,96,8,"nextKeys"],[88,16,96,16],[88,19,96,19],[88,23,96,23,"Set"],[88,26,96,19],[88,28,96,2],[89,0,97,2],[89,8,97,6,"nextRoutes"],[89,18,97,16],[89,21,97,19,"nextState"],[89,30,97,28],[89,31,97,29,"routes"],[89,37,97,2],[91,0,98,2],[91,8,98,6,"nextRoutes"],[91,18,98,16],[91,19,98,17,"length"],[91,25,98,6],[91,28,98,26,"nextState"],[91,37,98,35],[91,38,98,36,"index"],[91,43,98,26],[91,46,98,44],[91,47,98,2],[91,49,98,47],[92,0,99,4,"console"],[92,6,99,4,"console"],[92,13,99,11],[92,14,99,12,"warn"],[92,18,99,4],[92,19,100,6],[92,93,99,4],[93,0,102,4,"nextRoutes"],[93,6,102,4,"nextRoutes"],[93,16,102,14],[93,19,102,17,"nextState"],[93,28,102,26],[93,29,102,27,"routes"],[93,35,102,17],[93,36,102,34,"slice"],[93,41,102,17],[93,42,102,40],[93,43,102,17],[93,45,102,43,"nextState"],[93,54,102,52],[93,55,102,53,"index"],[93,60,102,43],[93,63,102,61],[93,64,102,17],[93,65,102,4],[94,0,103,3],[96,0,105,2,"nextRoutes"],[96,4,105,2,"nextRoutes"],[96,14,105,12],[96,15,105,13,"forEach"],[96,22,105,2],[96,23,105,21],[96,33,105,22,"route"],[96,38,105,21],[96,40,105,29,"index"],[96,45,105,21],[96,47,105,39],[97,0,106,4],[97,10,106,10,"key"],[97,13,106,13],[97,16,106,16,"SCENE_KEY_PREFIX"],[97,32,106,32],[97,35,106,35,"route"],[97,40,106,40],[97,41,106,41,"key"],[97,44,106,4],[98,0,108,4],[98,10,108,8,"descriptor"],[98,20,108,18],[98,23,108,21,"descriptors"],[98,34,108,32],[98,38,108,36,"descriptors"],[98,49,108,47],[98,50,108,48,"route"],[98,55,108,53],[98,56,108,54,"key"],[98,59,108,47],[98,60,108,4],[99,0,110,4],[99,10,110,10,"scene"],[99,15,110,15],[99,18,110,18],[100,0,111,6,"index"],[100,8,111,6,"index"],[100,13,111,11],[100,15,111,6,"index"],[100,20,110,18],[101,0,112,6,"isActive"],[101,8,112,6,"isActive"],[101,16,112,14],[101,18,112,16],[101,23,110,18],[102,0,113,6,"isStale"],[102,8,113,6,"isStale"],[102,15,113,13],[102,17,113,15],[102,22,110,18],[103,0,114,6,"key"],[103,8,114,6,"key"],[103,11,114,9],[103,13,114,6,"key"],[103,16,110,18],[104,0,115,6,"route"],[104,8,115,6,"route"],[104,13,115,11],[104,15,115,6,"route"],[104,20,110,18],[105,0,116,6,"descriptor"],[105,8,116,6,"descriptor"],[105,18,116,16],[105,20,116,6,"descriptor"],[106,0,110,18],[106,7,110,4],[107,0,118,4],[107,30,119,6],[107,31,119,7,"nextKeys"],[107,39,119,15],[107,40,119,16,"has"],[107,43,119,7],[107,44,119,20,"key"],[107,47,119,7],[107,48,118,4],[107,50,120,6],[107,79,120,33,"index"],[107,84,120,6],[107,100,120,48,"key"],[107,103,120,6],[107,129,121,8],[107,145,118,4],[108,0,123,4,"nextKeys"],[108,6,123,4,"nextKeys"],[108,14,123,12],[108,15,123,13,"add"],[108,18,123,4],[108,19,123,17,"key"],[108,22,123,4],[110,0,125,4],[110,10,125,8,"staleScenes"],[110,21,125,19],[110,22,125,20,"has"],[110,25,125,8],[110,26,125,24,"key"],[110,29,125,8],[110,30,125,4],[110,32,125,30],[111,0,128,6,"staleScenes"],[111,8,128,6,"staleScenes"],[111,19,128,17],[111,20,128,18,"delete"],[111,26,128,6],[111,27,128,25,"key"],[111,30,128,6],[112,0,129,5],[114,0,130,4,"freshScenes"],[114,6,130,4,"freshScenes"],[114,17,130,15],[114,18,130,16,"set"],[114,21,130,4],[114,22,130,20,"key"],[114,25,130,4],[114,27,130,25,"scene"],[114,32,130,4],[115,0,131,3],[115,5,105,2],[117,0,133,2],[117,8,133,6,"prevState"],[117,17,133,2],[117,19,133,17],[118,0,134,4],[118,10,134,8,"prevRoutes"],[118,20,134,18],[118,23,134,21,"prevState"],[118,32,134,30],[118,33,134,31,"routes"],[118,39,134,4],[120,0,135,4],[120,10,135,8,"prevRoutes"],[120,20,135,18],[120,21,135,19,"length"],[120,27,135,8],[120,30,135,28,"prevState"],[120,39,135,37],[120,40,135,38,"index"],[120,45,135,28],[120,48,135,46],[120,49,135,4],[120,51,135,49],[121,0,136,6,"console"],[121,8,136,6,"console"],[121,15,136,13],[121,16,136,14,"warn"],[121,20,136,6],[121,21,137,8],[121,95,136,6],[122,0,139,6,"prevRoutes"],[122,8,139,6,"prevRoutes"],[122,18,139,16],[122,21,139,19,"prevRoutes"],[122,31,139,29],[122,32,139,30,"slice"],[122,37,139,19],[122,38,139,36],[122,39,139,19],[122,41,139,39,"prevState"],[122,50,139,48],[122,51,139,49,"index"],[122,56,139,39],[122,59,139,57],[122,60,139,19],[122,61,139,6],[123,0,140,5],[125,0,142,4,"prevRoutes"],[125,6,142,4,"prevRoutes"],[125,16,142,14],[125,17,142,15,"forEach"],[125,24,142,4],[125,25,142,23],[125,35,142,24,"route"],[125,40,142,23],[125,42,142,31,"index"],[125,47,142,23],[125,49,142,41],[126,0,143,6],[126,12,143,12,"key"],[126,15,143,15],[126,18,143,18,"SCENE_KEY_PREFIX"],[126,34,143,34],[126,37,143,37,"route"],[126,42,143,42],[126,43,143,43,"key"],[126,46,143,6],[128,0,144,6],[128,12,144,10,"freshScenes"],[128,23,144,21],[128,24,144,22,"has"],[128,27,144,10],[128,28,144,26,"key"],[128,31,144,10],[128,32,144,6],[128,34,144,32],[129,0,145,8],[130,0,146,7],[132,0,147,6],[132,12,147,12,"lastScene"],[132,21,147,21],[132,24,147,24,"scenes"],[132,30,147,30],[132,31,147,31,"find"],[132,35,147,24],[132,36,147,36],[132,46,147,36,"scene"],[132,51,147,41],[133,0,147,41],[133,17,147,45,"scene"],[133,22,147,50],[133,23,147,51,"route"],[133,28,147,45],[133,29,147,57,"key"],[133,32,147,45],[133,37,147,65,"route"],[133,42,147,70],[133,43,147,71,"key"],[133,46,147,41],[134,0,147,41],[134,9,147,24],[134,10,147,6],[135,0,154,6],[135,12,154,12,"descriptor"],[135,22,154,22],[135,25,154,25,"lastScene"],[135,34,154,34],[135,37,155,10,"lastScene"],[135,46,155,19],[135,47,155,20,"descriptor"],[135,57,154,34],[135,60,156,10,"descriptors"],[135,71,156,21],[135,72,156,22,"route"],[135,77,156,27],[135,78,156,28,"key"],[135,81,156,21],[135,82,154,6],[137,0,158,6],[137,12,158,10,"descriptor"],[137,22,158,6],[137,24,158,22],[138,0,159,8,"staleScenes"],[138,10,159,8,"staleScenes"],[138,21,159,19],[138,22,159,20,"set"],[138,25,159,8],[138,26,159,24,"key"],[138,29,159,8],[138,31,159,29],[139,0,160,10,"index"],[139,12,160,10,"index"],[139,17,160,15],[139,19,160,10,"index"],[139,24,159,29],[140,0,161,10,"isActive"],[140,12,161,10,"isActive"],[140,20,161,18],[140,22,161,20],[140,27,159,29],[141,0,162,10,"isStale"],[141,12,162,10,"isStale"],[141,19,162,17],[141,21,162,19],[141,25,159,29],[142,0,163,10,"key"],[142,12,163,10,"key"],[142,15,163,13],[142,17,163,10,"key"],[142,20,159,29],[143,0,164,10,"route"],[143,12,164,10,"route"],[143,17,164,15],[143,19,164,10,"route"],[143,24,159,29],[144,0,165,10,"descriptor"],[144,12,165,10,"descriptor"],[144,22,165,20],[144,24,165,10,"descriptor"],[145,0,159,29],[145,11,159,8],[146,0,167,7],[147,0,168,5],[147,7,142,4],[148,0,169,3],[150,0,171,2],[150,8,171,8,"nextScenes"],[150,18,171,18],[150,21,171,21],[150,23,171,2],[152,0,173,2],[152,8,173,8,"mergeScene"],[152,18,173,18],[152,21,173,21],[152,30,173,8,"mergeScene"],[152,40,173,21],[152,41,173,21,"nextScene"],[152,50,173,30],[152,52,173,34],[153,0,173,34],[153,10,174,12,"key"],[153,13,173,34],[153,16,174,20,"nextScene"],[153,25,173,34],[153,26,174,12,"key"],[153,29,173,34],[154,0,175,4],[154,10,175,10,"prevScene"],[154,19,175,19],[154,22,175,22,"prevScenes"],[154,32,175,32],[154,33,175,33,"has"],[154,36,175,22],[154,37,175,37,"key"],[154,40,175,22],[154,44,175,44,"prevScenes"],[154,54,175,54],[154,55,175,55,"get"],[154,58,175,44],[154,59,175,59,"key"],[154,62,175,44],[154,63,175,22],[154,66,175,66],[154,70,175,4],[156,0,176,4],[156,10,176,8,"prevScene"],[156,19,176,17],[156,23,176,21,"areScenesShallowEqual"],[156,44,176,42],[156,45,176,43,"prevScene"],[156,54,176,42],[156,56,176,54,"nextScene"],[156,65,176,42],[156,66,176,4],[156,68,176,66],[157,0,179,6,"nextScenes"],[157,8,179,6,"nextScenes"],[157,18,179,16],[157,19,179,17,"push"],[157,23,179,6],[157,24,179,22,"prevScene"],[157,33,179,6],[158,0,180,5],[158,7,176,4],[158,13,180,11],[159,0,181,6,"nextScenes"],[159,8,181,6,"nextScenes"],[159,18,181,16],[159,19,181,17,"push"],[159,23,181,6],[159,24,181,22,"nextScene"],[159,33,181,6],[160,0,182,5],[161,0,183,3],[161,5,173,2],[163,0,185,2,"staleScenes"],[163,4,185,2,"staleScenes"],[163,15,185,13],[163,16,185,14,"forEach"],[163,23,185,2],[163,24,185,22,"mergeScene"],[163,34,185,2],[164,0,186,2,"freshScenes"],[164,4,186,2,"freshScenes"],[164,15,186,13],[164,16,186,14,"forEach"],[164,23,186,2],[164,24,186,22,"mergeScene"],[164,34,186,2],[165,0,188,2,"nextScenes"],[165,4,188,2,"nextScenes"],[165,14,188,12],[165,15,188,13,"sort"],[165,19,188,2],[165,20,188,18,"compareScenes"],[165,33,188,2],[166,0,190,2],[166,8,190,6,"activeScenesCount"],[166,25,190,23],[166,28,190,26],[166,29,190,2],[167,0,191,2,"nextScenes"],[167,4,191,2,"nextScenes"],[167,14,191,12],[167,15,191,13,"forEach"],[167,22,191,2],[167,23,191,21],[167,33,191,22,"scene"],[167,38,191,21],[167,40,191,29,"ii"],[167,42,191,21],[167,44,191,36],[168,0,192,4],[168,10,192,10,"isActive"],[168,18,192,18],[168,21,192,21],[168,22,192,22,"scene"],[168,27,192,27],[168,28,192,28,"isStale"],[168,35,192,21],[168,39,192,39,"scene"],[168,44,192,44],[168,45,192,45,"index"],[168,50,192,39],[168,55,192,55,"nextState"],[168,64,192,64],[168,65,192,65,"index"],[168,70,192,4],[170,0,193,4],[170,10,193,8,"isActive"],[170,18,193,16],[170,23,193,21,"scene"],[170,28,193,26],[170,29,193,27,"isActive"],[170,37,193,4],[170,39,193,37],[171,0,194,6,"nextScenes"],[171,8,194,6,"nextScenes"],[171,18,194,16],[171,19,194,17,"ii"],[171,21,194,16],[171,22,194,6],[171,43,195,11,"scene"],[171,48,194,6],[172,0,196,8,"isActive"],[172,10,196,8,"isActive"],[172,18,196,16],[172,20,196,8,"isActive"],[173,0,194,6],[174,0,198,5],[176,0,199,4],[176,10,199,8,"isActive"],[176,18,199,4],[176,20,199,18],[177,0,200,6,"activeScenesCount"],[177,8,200,6,"activeScenesCount"],[177,25,200,23],[178,0,201,5],[179,0,202,3],[179,5,191,2],[180,0,204,2],[180,28,205,4,"activeScenesCount"],[180,45,205,21],[180,50,205,26],[180,51,204,2],[180,53,206,4],[180,108,204,2],[180,110,207,4,"activeScenesCount"],[180,127,204,2],[182,0,210,2],[182,8,210,6,"nextScenes"],[182,18,210,16],[182,19,210,17,"length"],[182,25,210,6],[182,30,210,28,"scenes"],[182,36,210,34],[182,37,210,35,"length"],[182,43,210,2],[182,45,210,43],[183,0,211,4],[183,13,211,11,"nextScenes"],[183,23,211,4],[184,0,212,3],[186,0,214,2],[186,8,215,4,"nextScenes"],[186,18,215,14],[186,19,215,15,"some"],[186,23,215,4],[186,24,216,6],[186,34,216,7,"scene"],[186,39,216,6],[186,41,216,14,"index"],[186,46,216,6],[187,0,216,6],[187,13,216,24],[187,14,216,25,"areScenesShallowEqual"],[187,35,216,46],[187,36,216,47,"scenes"],[187,42,216,53],[187,43,216,54,"index"],[187,48,216,53],[187,49,216,46],[187,51,216,62,"scene"],[187,56,216,46],[187,57,216,6],[188,0,216,6],[188,5,215,4],[188,6,214,2],[188,8,218,4],[189,0,219,4],[189,13,219,11,"nextScenes"],[189,23,219,4],[190,0,220,3],[192,0,223,2],[192,11,223,9,"scenes"],[192,17,223,2],[193,0,224,1]]},"type":"js/module"}]}